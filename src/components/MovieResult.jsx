import React, { useEffect, useState } from "react";

const TMDB_API_KEY = "efb9e8a4a83601cdfdd5346ccf911519";

const genreMap = {
  "–ë–æ–π–æ–≤–∏–∫": 28,
  "–ü—Ä–∏–≥–æ–¥–∏": 12,
  "–ê–Ω—ñ–º–∞—Ü—ñ—è": 16,
  "–ö–æ–º–µ–¥—ñ—è": 35,
  "–ö—Ä–∏–º—ñ–Ω–∞–ª": 80,
  "–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–∏–π": 99,
  "–î—Ä–∞–º–∞": 18,
  "–°—ñ–º–µ–π–Ω–∏–π": 10751,
  "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞": 878,
  "–Ü—Å—Ç–æ—Ä–∏—á–Ω–∏–π": 36,
  "–ñ–∞—Ö–∏": 27,
  "–ú—É–∑–∏–∫–∞": 10402,
  "–ú–µ–ª–æ–¥—Ä–∞–º–∞": 10749,
  "–§–µ–Ω—Ç–µ–∑—ñ": 14,
  "–¢—Ä–∏–ª–µ—Ä": 53,
  "–í—ñ–π—Å—å–∫–æ–≤–∏–π": 10752,
  "–í–µ—Å—Ç–µ—Ä–Ω": 37,
  "–¢–µ–ª–µ–≤—ñ–∑—ñ–π–Ω–∏–π —Ñ—ñ–ª—å–º": 10770,
  "–î–µ—Ç–µ–∫—Ç–∏–≤": 9648
};

const MovieResult = ({ answers, onRestart }) => {
  const [movies, setMovies] = useState([]);
  const [movie, setMovie] = useState(null);
  const [error, setError] = useState(null);

  const fetchMovies = () => {
    const genreId = genreMap[answers.genre];

    let yearFrom = 1950;
    let yearTo = new Date().getFullYear();

    if (answers.era === "–ö–ª–∞—Å–∏–∫–∞ (–¥–æ 2000)") {
      yearTo = 1999;
    } else if (answers.era === "–°–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä—ñ–æ–¥ (2000‚Äì2015)") {
      yearFrom = 2000;
      yearTo = 2015;
    } else if (answers.era === "–°—É—á–∞—Å–Ω–∏–π (2015+)") {
      yearFrom = 2016;
    }

    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_genres=${genreId}&primary_release_date.gte=${yearFrom}-01-01&primary_release_date.lte=${yearTo}-12-31&language=uk&sort_by=popularity.desc`;

    fetch(url)
      .then((res) => res.json())
      .then((data) => {
        if (data.results && data.results.length > 0) {
          setMovies(data.results);
          const random = data.results[Math.floor(Math.random() * data.results.length)];
          setMovie(random);
        } else {
          setError("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ—ñ–ª—å–º—ñ–≤ –∑–∞ –∑–∞–¥–∞–Ω–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏... –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ");
        }
      })
      .catch(() => setError("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞."));
  };

  useEffect(() => {
    fetchMovies();
  }, [answers]);

  const getAnotherMovie = () => {
    if (movies.length > 1) {
      const alternatives = movies.filter((m) => m.id !== movie.id);
      const random = alternatives[Math.floor(Math.random() * alternatives.length)];
      setMovie(random);
    }
  };

  const openInGoogle = () => {
    const query = `${movie.title} ${movie.release_date?.slice(0, 4)} –¥–∏–≤–∏—Ç–∏—Å—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é`;
    window.open(`https://www.google.com/search?q=${encodeURIComponent(query)}`, "_blank");
  };

  return (
    <div className="result">
      {error && <p>{error}</p>}
      {movie && (
        <div>
          <h2>–†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –≤–∞–º —Ñ—ñ–ª—å–º:</h2>
          <h3>{movie.title} ({movie.release_date?.slice(0, 4)})</h3>
          <p>{movie.overview}</p>
          {movie.poster_path && (
            <img
              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}
              alt={movie.title}
              style={{ maxWidth: "200px" }}
            />
          )}
          <br />
          <div style={{ marginTop: "15px" }}>
            <button onClick={getAnotherMovie} style={{ marginRight: "10px" }}>
              –û–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
            </button>
            <button onClick={openInGoogle} style={{ marginRight: "10px" }}>
              –î–∏–≤–∏—Ç–∏—Å—è —Ñ—ñ–ª—å–º!
            </button>
            <button onClick={onRestart}>–®—É–∫–∞—Ç–∏ –∑–∞–Ω–æ–≤–æ üîÅ</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default MovieResult;
